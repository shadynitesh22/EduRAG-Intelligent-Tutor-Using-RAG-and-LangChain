# Generated by Django 5.2.4 on 2025-07-10 22:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_text', models.TextField()),
                ('chunk_index', models.IntegerField()),
                ('start_char', models.IntegerField()),
                ('end_char', models.IntegerField()),
                ('embedding_vector', models.JSONField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['textbook', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='EmbeddingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider', models.CharField(max_length=50)),
                ('model_id', models.CharField(max_length=200)),
                ('vector_dimension', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('K', 'Kindergarten'), ('1', 'Grade 1'), ('2', 'Grade 2'), ('3', 'Grade 3'), ('4', 'Grade 4'), ('5', 'Grade 5'), ('6', 'Grade 6'), ('7', 'Grade 7'), ('8', 'Grade 8'), ('9', 'Grade 9'), ('10', 'Grade 10'), ('11', 'Grade 11'), ('12', 'Grade 12')], max_length=2, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='QueryLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_text', models.TextField()),
                ('query_type', models.CharField(choices=[('rag', 'RAG Query'), ('sql', 'SQL Query'), ('chat', 'Chat Query')], default='rag', max_length=20)),
                ('response_text', models.TextField()),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('persona_used', models.CharField(blank=True, max_length=50)),
                ('subject_filter', models.CharField(blank=True, max_length=100)),
                ('grade_filter', models.CharField(blank=True, max_length=10)),
                ('top_k_results', models.IntegerField(default=5)),
                ('context_chunks_count', models.IntegerField(default=0)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('retrieved_chunks', models.ManyToManyField(blank=True, to='knowledge_base.contentchunk')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_unit', models.CharField(blank=True, max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('tags', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_name', 'timestamp'], name='knowledge_b_metric__dad866_idx')],
            },
        ),
        migrations.CreateModel(
            name='TextbookContent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='textbooks/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'txt', 'docx'])])),
                ('content_text', models.TextField()),
                ('metadata', models.JSONField(default=dict)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_base.grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledge_base.subject')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='contentchunk',
            name='textbook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='knowledge_base.textbookcontent'),
        ),
        migrations.AlterUniqueTogether(
            name='contentchunk',
            unique_together={('textbook', 'chunk_index')},
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('content_upload', 'Content Upload'), ('content_process', 'Content Processing'), ('query_execution', 'Query Execution'), ('feedback_submitted', 'Feedback Submitted'), ('system_error', 'System Error'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('admin_action', 'Admin Action')], max_length=50)),
                ('event_description', models.TextField()),
                ('event_data', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('execution_time_ms', models.IntegerField(blank=True, null=True)),
                ('memory_usage_mb', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_query', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge_base.querylog')),
                ('related_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='knowledge_base.textbookcontent')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='knowledge_b_event_t_377c0e_idx'), models.Index(fields=['user', 'created_at'], name='knowledge_b_user_id_ef8984_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(help_text='Rating from 1 (poor) to 5 (excellent)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('feedback_type', models.CharField(choices=[('accuracy', 'Accuracy'), ('helpfulness', 'Helpfulness'), ('clarity', 'Clarity'), ('completeness', 'Completeness'), ('relevance', 'Relevance')], default='helpfulness', max_length=20)),
                ('feedback_text', models.TextField(blank=True)),
                ('is_helpful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('query_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='knowledge_base.querylog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('query_log', 'user', 'feedback_type')},
            },
        ),
    ]
